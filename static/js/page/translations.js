// This file centralizes all translatable strings for the UI to avoid circular dependencies.

// The `t` object is exported empty and will be populated by `initializeTranslations`.
export const t = {};

// This function populates the `t` object. It should be called once the global `_` function is available.
export function initializeTranslations() {
    Object.assign(t, {
        // General UI
        networkResponseNotOk: _('Network response was not ok.'),
        noChangesDetected: _('No changes detected.'),
        // Calibre Error Messages
        calibreConnectionError: _('Calibre Connection Error'),
        calibreUnauthorizedError: _('Calibre Authentication Error'),
        calibreForbiddenError: _('Calibre Permission Error'),
        calibreHttpError: _('Calibre HTTP Error'),
        calibreRequestError: _('Calibre Request Error'),
        errorReason: _('Reason:'),
        solution: _('Solution:'),
        solutionConnectionError: _('Check if the Calibre server is running and the URL in Settings -> Calibre Config is correct.'),
        solutionConnectionErrorV2: _("Please ensure you are connecting to Calibre's content-server (default port: 8080), not calibre-web (default port: 8083). Check if the server is running and the URL in Settings -> Calibre Config is correct."),
        solutionUnauthorized: _('Verify that the username and password in Settings -> Calibre Config are correct.'),
        originalError: _('Original Error:'),
        configuredURL: _('Request URL (click to test):'),
        solutionForbidden: _('Ensure the Library ID in Settings -> Calibre Config is correct. Also, check if the user has write permissions in Calibre.'),
        solutionHttpError: _('The Calibre server returned an error. Please check the Calibre server logs for more details.'),
        solutionRequestError: _('An unknown error occurred while connecting to Calibre. Please check the application logs.'),
        confirmDeleteBook: _('Are you sure you want to delete this book? This action cannot be undone.'),
        invalidPageNumber: _('Please enter a valid page number between 1 and %(totalPages)s.'),
        selectFilesToUpload: _('Please select files to upload.'),
        waiting: _('Waiting...'),
        uploading: _('Uploading...'),
        processing: _('Processing...'),
        uploadFailed: _('Upload failed'),
        networkError: _('Network Error'),
        NETWORK_ERROR: _('Network error: Failed to connect to the server.'),
        allBooksUploaded: _('All books uploaded successfully!'),
        someFilesFailedUpload: _('Some files failed to upload. Please check the progress details.'),
        generating: _('Generating...'),
        downloadAudiobook: _('Download Audiobook'),
        listenAudiobook: _('Listen to Audiobook'),
        failed: _('Failed'),
        error: _('Error'),
        success: _('Success!'),

        // Edit Modal
        title: _('Title'),
        author: _('Author'),
        authors: _('Authors (comma-separated)'),
        rating: _('Rating (0-5)'),
        readingProgress: _('Reading Progress (%)'),
        description: _('Description'),
        note: _('Note'),
        metadataNote: _('Metadata updates for Calibre books are asynchronous and may take a moment to apply.'),
        publisher: _('Publisher'),
        pubDate: _('Publication Date'),
        tags: _('Tags (comma-separated)'),
        library: _('Library (custom field #library)'),
        readDate: _('Read Date (custom field #readdate)'),

        // Audiobook Status Keys (from backend)
        QUEUED: _("Task queued"),
        GENERATION_STARTED: _("Starting audiobook generation..."),
        PARSING_EPUB: _("Parsing EPUB file..."),
        PROCESSING_CHAPTER: _("Processing: Chapter %(index)d/%(total)d"),
        MERGING_FILES: _("Merging audio files..."),
        WRITING_METADATA: _("Writing book metadata..."),
        CLEANING_UP: _("Cleaning up temporary files..."),
        GENERATION_SUCCESS: _("Audiobook generated successfully!"),
        CHAPTER_EXTRACTION_FAILED: _("Could not extract any chapters from the EPUB file."),
        CHAPTER_CONVERSION_FAILED: _("All chapters are empty or could not be converted to audio."),
        UNKNOWN_ERROR: _("An unknown error occurred: %(error)s"),
        FILE_ERROR: _("File error: %(error)s"),

        // Chat Player
        exportAsImage: _('Export as Image'),
        exportedBy: _('Exported by Anx Calibre Manager by ptbsare'),
        aiDisclaimer: _('Content generated by AI. Please verify accuracy.'),
        extractingBookContent: _('Extracting entire book content...'),
        thinking: _('Thinking...'),
        updated: _('Updated'),
        deleteChat: _('Delete Chat'),
        failedToFetchChatHistory: _('Failed to fetch chat history.'),
        errorLoadingHistory: _('Error loading history:'),
        failedToGetResponse: _('Failed to get a response from the AI.'),
        anErrorOccurred: _('An error occurred:'),
        initialChatPrompt: _("Please provide a comprehensive summary and a profound review of this book."),
        yearsAgo: _('years ago'),
        monthsAgo: _('months ago'),
        daysAgo: _('days ago'),
        hoursAgo: _('hours ago'),
        minutesAgo: _('minutes ago'),
        justNow: _('just now'),
        confirmDeleteChat: _('Are you sure you want to delete this chat session? This action cannot be undone.'),
        failedToDeleteSession: _('Failed to delete the session.'),
        errorLabel: _('Error:'),
        zoomIn: _('Zoom In'),
        zoomOut: _('Zoom Out'),
        resetZoom: _('Reset Zoom'),
        downloadSVG: _('Download SVG'),
        mermaidRenderError: _('Mermaid Render Error'),
        emptyResponseRetry: _('Empty response, retrying...'),
        errorResponseRetry: _('Error, retrying...'),
        allRetriesFailedEmpty: _('All retry attempts failed due to empty responses.'),

        // Audio Player
        failedToFetchAudiobookList: _('Failed to fetch audiobook list.'),
        deleteAudiobook: _('Delete Audiobook'),
        areYouSureYouWantToDelete: _('Are you sure you want to delete the audiobook "%(title)s"? This action cannot be undone.'),
        errorWithMessage: _('Error: %(message)s'),
        failedToDeleteAudiobook: _('Failed to delete audiobook.'),
        anUnexpectedErrorOccurred: _('An unexpected error occurred.'),
        chapters: _('chapters'),
        noChaptersAvailable: _('No chapters available.'),
        more: _('More'),
        less: _('Less'),
        album: _('Album'),
        albumArtist: _('Album Artist'),
        genre: _('Genre'),
        year: _('Year'),
        composer: _('Composer'),
        comment: _('Comment'),
        description: _('Description'),
        previousChapter: _('Previous Chapter'),
        nextChapter: _('Next Chapter'),
        seekBackward: _('Seek Backward 10s'),
        seekForward: _('Seek Forward 30s'),
        playPause: _('Play/Pause'),
        playbackSpeed: _('Playback Speed'),
        
        // User Activities Page
        totalUsers: _('Total Users'),
        activeToday: _('Active Today'),
        totalLogins: _('Total Logins'),
        totalActivities: _('Total Activities'),
        uniqueUsers: _('Unique Users'),
        time: _('Time'),
        activityType: _('Activity Type'),
        status: _('Status'),
        details: _('Details'),
        user: _('User'),
        success: _('Success'),
        failed: _('Failed'),
        total: _('Total'),
        active: _('Active'),
        viewDetails: _('View Details'),
        lock: _('Lock'),
        unlock: _('Unlock'),
        resetFailed: _('Reset Failed'),
        noActivitiesFound: _('No activities found'),
        noRecentActivities: _('No recent activities'),
        noFailedLoginAttempts: _('No failed login attempts'),
        lockedUntil: _('Locked until'),
        ip: _('IP'),
        reason: _('Reason'),
        lastLogin: _('Last Login'),
        lastLoginIP: _('Last Login IP'),
        loginCount: _('Login Count'),
        deleteActivities: _('Delete Activities'),
        deleteAllActivities: _('Delete All Activities'),
        areYouSureDeleteUserActivities: _('Are you sure you want to delete all activities for user'),
        thisActionCannotBeUndone: _('This action cannot be undone.'),
        activitiesDeletedSuccess: _('Activities deleted successfully.'),
        failedToDeleteActivities: _('Failed to delete activities'),
        errorDeletingActivities: _('An error occurred while deleting activities.'),
        areYouSureDeleteAllActivities: _('Are you absolutely sure you want to delete all activity logs for ALL users? This action is irreversible.'),
        allActivitiesDeletedSuccess: _('All activities deleted successfully.'),
        failedToDeleteAllActivities: _('Failed to delete all activities'),
        errorDeletingAllActivities: _('An error occurred while deleting all activities.'),
    });
}

// A simple sprintf-like function for replacements.
export function sprintf(str, values) {
    if (!str) return '';
    return str.replace(/%\((\w+)\)s/g, (match, key) => {
        return values.hasOwnProperty(key) ? values[key] : match;
    });
}