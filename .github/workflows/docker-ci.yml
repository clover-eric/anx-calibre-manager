name: Docker CI

on:
  push:
    branches:
      - "main"
    tags:
      - 'v*.*.*'
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Update Service Worker Cache Name
        run: |
          TIMESTAMP=$(date +%Y%m%d%H%M%S)
          sed -i "s/const CACHE_NAME = 'anx-calibre-manager-datetime';/const CACHE_NAME = 'anx-calibre-manager-${TIMESTAMP}';/" ./static/sw.js

      - name: Set Version
        run: |
          if [[ "${{ github.ref }}" == refs/tags/v* ]]; then
            VERSION=${{ github.ref_name }}
          else
            VERSION=${{ github.sha }}
            VERSION=${VERSION:0:7}
          fi
          echo "Setting version to $VERSION"
          sed -i "s/__VERSION__/$VERSION/g" app.py

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            # on push to main branch, tag with beta
            type=raw,value=beta,enable=${{ github.ref == 'refs/heads/main' }}
            # on release (tag push), tag with latest and version
            type=raw,value=latest,enable=${{ startsWith(github.ref, 'refs/tags/v') }}
            type=semver,pattern={{version}},enable=${{ startsWith(github.ref, 'refs/tags/v') }}
            type=semver,pattern={{major}}.{{minor}},enable=${{ startsWith(github.ref, 'refs/tags/v') }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
